#[contractimpl]
impl CurrencyOptimizer {
    pub fn optimize_exchange(env: Env, amount: i128, from: Symbol, to: Symbol) -> (i128, i128) {
        let reflector_contract_id = Address::from_str("CALI2BYU2JE6WVRUFYTS6MSBNEHGJ35P4AVCZYF3B6QOE3QKOB2PLE6M");
        let reflector = PriceOracleClient::new(env.clone(), reflector_contract_id);

        let currencies: Vec<Symbol> = vec![
            Symbol::from("USDC"),
            Symbol::from("EUR"),
            Symbol::from("XLM"),
            Symbol::from("GBP"),
            Symbol::from("JPY")
        ];

        let mut best_rate = 0_i128;
        let mut best_path = Vec::new();

        for intermediate in currencies.iter() {
            if &from != intermediate && intermediate != &to {
                let base_asset_from = Asset::Other(from.clone());
                let base_asset_intermediate = Asset::Other(intermediate.clone());
                let base_asset_to = Asset::Other(to.clone());

                let rate1 = reflector.x_last_price(&base_asset_from, &base_asset_intermediate).unwrap().price;
                let rate2 = reflector.x_last_price(&base_asset_intermediate, &base_asset_to).unwrap().price;

                let total_rate = rate1 * rate2 / 10_i128.pow(reflector.decimals() * 2);

                if total_rate > best_rate {
                    best_rate = total_rate;
                    best_path = vec![from.clone(), intermediate.clone(), to.clone()];
                }
            }
        }

        let mut final_amount = amount;
        for i in 0..(best_path.len() - 1) {
            let base_asset_from = Asset::Other(best_path[i].clone());
            let base_asset_to = Asset::Other(best_path[i + 1].clone());

            let rate = reflector.x_last_price(&base_asset_from, &base_asset_to).unwrap().price;
            final_amount = final_amount * rate / 10_i128.pow(reflector.decimals());

            SingleOffer::trade(
                env.clone(),
                env.current_contract_address(),
                final_amount,
                0,
            );
        }

        (final_amount, best_rate)
    }
}
